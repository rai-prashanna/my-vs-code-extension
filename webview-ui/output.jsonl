{"Summary": "The BiosafeManager::SaveDocument service centralizes the logic for creating device-linked documents (ensuring no duplicates and applying permission scope), so controllers can pass a datum and file and rely on the service to handle model lookups, permission checks, and record creation.", "Relationships": [{"Model": "Document", "Description": "The service checks for an existing Document tied to a specific datum and equipment and creates a new Document record with the file and metadata if none exists; controllers can call the service to persist uploaded files without embedding creation logic in controllers.", "Operation": "BiosafeManager::SaveDocument", "OperationDescription": "Encapsulates the create-if-not-exists workflow for Document persistence, including preparing file data and notes, so callers get a single, reusable operation for saving documents."}, {"Model": "Datum", "Description": "Datum is used as the contextual source of truth (its id links the document) and the service reads datum to determine the target equipment and to scope the lookup for duplicates; controllers supply the datum when delegating the save action to the service.", "Operation": "BiosafeManager::SaveDocument", "OperationDescription": "Takes a datum instance as input to derive association information and to drive the document save flow, keeping controllers free from association and validation details."}, {"Model": "Equipment", "Description": "The service uses Equipment via datum.equipment to attach organization and equipment identifiers, to build descriptive notes, and to enforce policy scope for visible documents; controllers benefit by not having to manage equipment-related attributes or permission checks when saving a document.", "Operation": "BiosafeManager::SaveDocument", "OperationDescription": "Reads equipment-related data and applies policy-scoped lookups to prevent unauthorized or duplicate document creation, centralizing permission-aware business rules."}], "file": "app/services/biosafe_manager/save_document.txt"}